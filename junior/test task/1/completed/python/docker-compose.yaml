version: '3.8'

services:
  backend: 
    container_name: ${SERVER_CONTAINER_NAME}
    build: ./main_worker
    command: bash start.sh
    ports:
      - ${SERVER_PORT}
    depends_on:
      - database
    networks:
      - database-network
      - api_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120
      resources:
        limits:
          cpus: '1.00'
          memory: 512M
        reservations:
          cpus: '1.00'
          memory: 256M

  database:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:15
    env_file:
      - .env
    ports:
      - ${POSTGRES_CONTAINER_PORT}
    networks:
      - database-network
    volumes:
      - postgres:/data/postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120
      resources:
        limits:
          cpus: '0.50'
          memory: 128M
        reservations:
          cpus: '0.50'
          memory: 64M 


networks:
  database-network:
    name: database-network
    driver: bridge

  api_network:
    name: api_network
    driver: bridge

volumes:
    postgres: